name: Build and Release GDExtension

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  release:
    types: [created]
  workflow_dispatch:

env:
  EOS_SDK_URL: 'https://onlineservices.epicgames.com/api/sdk/download?archive_id=774&archive_type=sdk'

jobs:
  build-linux-x86_64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Init submodules
        run: git submodule update --init --recursive
      - name: Cache godot-cpp build
        uses: actions/cache@v4
        with:
          path: godot_epic_extension/godot-cpp/bin
          key: ${{ runner.os }}-godotcpp-${{ hashFiles('godot_epic_extension/godot-cpp/src/**', 'godot_epic_extension/godot-cpp/SConstruct', 'godot_epic_extension/godot-cpp/Makefile') }}
          restore-keys: |
            ${{ runner.os }}-godotcpp-
      - name: Download EOS SDK
        run: |
          curl -L -o eos_sdk.zip "${{ env.EOS_SDK_URL }}"
          rm -rf eos_sdk
          unzip -q eos_sdk.zip
          SDK_ROOT=$(find . -maxdepth 1 -type d -name 'EOS-SDK-*' | head -n 1)
          if [ -z "$SDK_ROOT" ]; then
            echo "Failed to find EOS SDK root directory" >&2
            exit 1
          fi
          mv "$SDK_ROOT/SDK" eos_sdk
          rm -rf "$SDK_ROOT"
          ls -R eos_sdk || true
      - name: Install SCons
        run: sudo apt-get install -y scons
      - name: Build Linux x86_64 Debug
        working-directory: godot_epic_extension
        run: scons platform=linux arch=x86_64 target=template_debug EOS_SDK_PATH=../eos_sdk
      - name: Build Linux x86_64 Release
        working-directory: godot_epic_extension
        run: scons platform=linux arch=x86_64 target=template_release EOS_SDK_PATH=../eos_sdk
      - name: Upload Linux x86_64 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: godotepic-linux-x86_64
          path: godot_epic_extension/demo/bin/**

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Init submodules
        run: git submodule update --init --recursive
      - name: Cache godot-cpp build
        uses: actions/cache@v4
        with:
          path: godot_epic_extension/godot-cpp/bin
          key: ${{ runner.os }}-godotcpp-${{ hashFiles('godot_epic_extension/godot-cpp/src/**', 'godot_epic_extension/godot-cpp/SConstruct', 'godot_epic_extension/godot-cpp/Makefile') }}
          restore-keys: |
            ${{ runner.os }}-godotcpp-
      - name: Install SCons
        run: brew install scons
      - name: Download EOS SDK
        run: |
          curl -L -o eos_sdk.zip "${{ env.EOS_SDK_URL }}"
          rm -rf eos_sdk
          unzip -q eos_sdk.zip
          SDK_ROOT=$(find . -maxdepth 1 -type d -name 'EOS-SDK-*' | head -n 1)
          if [ -z "$SDK_ROOT" ]; then
            echo "Failed to find EOS SDK root directory" >&2
            exit 1
          fi
          mv "$SDK_ROOT/SDK" eos_sdk
          rm -rf "$SDK_ROOT"
          ls -R eos_sdk || true
      - name: Build Mac
        working-directory: godot_epic_extension
        run: scons platform=macos target=template_release EOS_SDK_PATH=../eos_sdk
      - name: Upload Mac Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: godotepic-macos
          path: godot_epic_extension/demo/bin/**

  build-windows-x86_64:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Init submodules
        run: git submodule update --init --recursive
      - name: Cache godot-cpp build
        uses: actions/cache@v4
        with:
          path: godot_epic_extension/godot-cpp/bin
          key: ${{ runner.os }}-godotcpp-${{ hashFiles('godot_epic_extension/godot-cpp/src/**', 'godot_epic_extension/godot-cpp/SConstruct', 'godot_epic_extension/godot-cpp/Makefile') }}
          restore-keys: |
            ${{ runner.os }}-godotcpp-
      - name: Install SCons
        run: pip install scons
      - name: Download EOS SDK
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $url = '${{ env.EOS_SDK_URL }}'
          Invoke-WebRequest -Uri $url -OutFile 'eos_sdk.zip'
          if (Test-Path 'eos_sdk_extract') { Remove-Item 'eos_sdk_extract' -Recurse -Force }
          Expand-Archive -Path 'eos_sdk.zip' -DestinationPath 'eos_sdk_extract'
          $archiveDir = Get-ChildItem -Path 'eos_sdk_extract' -Directory | Where-Object { $_.Name -like 'EOS-SDK-*' } | Select-Object -First 1
          if (-not $archiveDir) {
            throw 'Failed to locate EOS SDK archive directory.'
          }
          if (Test-Path 'eos_sdk') { Remove-Item 'eos_sdk' -Recurse -Force }
          Move-Item -Path (Join-Path $archiveDir.FullName 'SDK') -Destination 'eos_sdk'
          Remove-Item 'eos_sdk_extract' -Recurse -Force
          Get-ChildItem -Recurse eos_sdk || Write-Output 'eos_sdk not found'
      - name: Build Windows x86_64
        shell: pwsh
        working-directory: godot_epic_extension
        run: scons platform=windows arch=x86_64 target=template_release EOS_SDK_PATH=../eos_sdk
      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: godotepic-windows-x86_64
          path: godot_epic_extension/demo/bin/**

  release:
    needs:
      - build-linux-x86_64
      - build-macos
      - build-windows-x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: godotepic-linux-x86_64
          path: artifacts/linux/x86_64

      - name: Download Mac artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: godotepic-macos
          path: artifacts/macos

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: godotepic-windows-x86_64
          path: artifacts/windows/x86_64

      - name: Create bin directories in addons
        run: |
          mkdir -p addons/godot_epic/bin/linux
          mkdir -p addons/godot_epic/bin/macos
          mkdir -p addons/godot_epic/bin/windows

      - name: Copy downloaded build artifacts into addons
        run: |
          set -e
          if [ -d artifacts/linux/x86_64 ]; then
            cp -a artifacts/linux/x86_64/. addons/godot_epic/bin/linux/ || true
          fi
          if [ -d artifacts/macos ]; then
            cp -a artifacts/macos/. addons/godot_epic/bin/macos/ || true
          fi
          if [ -d artifacts/windows/x86_64 ]; then
            cp -a artifacts/windows/x86_64/. addons/godot_epic/bin/windows/ || true
          fi

      - name: Show contents of addons/bin for debug
        run: |
          echo "Listing addons/godot_epic/bin"
          ls -R addons/godot_epic/bin || true

      - name: Zip entire addons folder with tag name
        shell: bash
        run: zip -r "GodotEpic_${{ github.ref_name }}.zip" addons

      - name: Create Release with named zip
        uses: softprops/action-gh-release@v2
        with:
          files: GodotEpic_${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
